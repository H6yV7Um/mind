{"root":{"data":{"id":"bl8pkvkhhqo8","created":1525502712909,"text":"vue相关"},"children":[{"data":{"id":"bl8pl5l4xjsc","created":1525502734716,"text":"less","note":"## 基础语法\n\n## 引入\n```\n@import \"studyLess.css\";\n```\n\n### 变量\n可以定义，引用，可以计算\n```\n@nice-blue: #5B83AD;\n@light-blue: @nice-blue + #111;\n\n#header {\n  color: @light-blue;\n}\n```\n### 混合\n即复用\n### 嵌套\n即层级嵌套\n```\n#header {\n  color: black;\n  .navigation {\n    font-size: 12px;\n  }\n  .logo {\n    width: 300px;\n  }\n}\n```\n#### 媒体查询嵌套\n```\n.component {\n  width: 300px;\n  @media (min-width: 768px) {\n    width: 600px;\n    @media  (min-resolution: 192dpi) {\n      background-image: url(/img/retina2x.png);\n    }\n  }\n  @media (min-width: 1280px) {\n    width: 800px;\n  }\n}\n```\n\n编译为\n```\n.component {\n  width: 300px;\n}\n@media (min-width: 768px) {\n  .component {\n    width: 600px;\n  }\n}\n@media (min-width: 768px) and (min-resolution: 192dpi) {\n  .component {\n    background-image: url(/img/retina2x.png);\n  }\n}\n@media (min-width: 1280px) {\n  .component {\n    width: 800px;\n  }\n}\n```\n\n### Escaping\n字符串模板， ~\"anything\"\n```\n@min768: ~\"(min-width: 768px)\";\n.element {\n  @media @min768 {\n    font-size: 1.2rem;\n  }\n}\n```\n编译为：\n```\n@media (min-width: 768px) {\n  .element {\n    font-size: 1.2rem;\n  }\n}\n```\n\n### 真 混合 \n```\n#bundle() {\n  .button {\n    border: 1px solid black;\n    background-color: grey;\n    &:hover {\n      background-color: white\n    }\n  }\n}\n#header a {\n  color: orange;\n  #bundle > .button;  // can also be written as #bundle.button\n}\n```\n\n### 数组取值\n\n```\n@list: \"banana\", \"tomato\", \"potato\", \"peach\";\nn: length(@list);\n\nn: 4;\n```\n\n```\n@list: apple, pear, coconut, orange;\nvalue: extract(@list, 3);\n\nvalue: coconut;\n```\n\n"},"children":[]},{"data":{"id":"bl8plzqwqdk4","created":1525502800369,"text":"scroll事件","note":"## scroll \n```\ncreated() {\n    this.init();\n    // 设置滚动 分页\n    window.addEventListener('scroll', this.onScroll)\n}\n\ndestroyed() {\n    window.removeEventListener('scroll', this.onScroll)\n},\n```"},"children":[]},{"data":{"id":"bl8pmig2pvk0","created":1525502841073,"text":"常用语法","note":"## 事件绑定--取消默认行为\n1. @click.prevent.stop  冒泡\n2. @touchmove.prevent 禁止滑动\n\n##\n"},"children":[]},{"data":{"id":"bl8pn02kzo08","created":1525502879439,"text":"路由","note":"## 跳转\n```\nthis.$router.push({name:path})\n```\n"},"children":[]},{"data":{"id":"bl8pms40iko4","created":1525502862111,"text":"生命周期","note":"## \n\n总共分为8个阶段创建前/后，载入前/后，更新前/后，销毁前/后。\n创建前/后： 在beforeCreated阶段，vue实例的挂载元素$el和数据对象data都为undefined，还未初始化。在created阶段，vue实例的数据对象data有了，$el还没有。\n载入前/后：在beforeMount阶段，vue实例的$el和data都初始化了，但还是挂载之前为虚拟的dom节点，data.message还未替换。在mounted阶段，vue实例挂载完成，data.message成功渲染。\n更新前/后：当data变化时，会触发beforeUpdate和updated方法。\n销毁前/后：在执行destroy方法后，对data的改变不会再触发周期函数，说明此时vue实例已经解除了事件监听以及和dom的绑定，但是dom结构依然存在\n### 主动销毁\napp.$destroy();"},"children":[]},{"data":{"id":"bl8pmbq86owg","created":1525502826449,"text":"动画","note":"## 进入离开过渡\n\n### transition 组件\n\nv-if等，进入离开时添加类名，动画结束去掉类名\n\n```\n<transition name=\"fade\">\n    <p v-if=\"show\">hello</p>\n  </transition>\n\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity .5s;\n}\n.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n```"},"children":[]},{"data":{"id":"bl8plhvsxmgw","created":1525502761483,"text":"vue2.0面试","note":"## 你是怎么认识vuex的？\n\n答：vuex可以理解为一种开发模式或框架。比如PHP有thinkphp，java有spring等。\n通过状态（数据源）集中管理驱动组件的变化（好比spring的IOC容器对bean进行集中管理）。\n应用级的状态集中放在store中； 改变状态的方式是提交mutations，这是个同步的事物； 异步逻辑应该封装在action中。\n\n## 怎么理解MVVM模式的这些框架？\n\n答：1、M就是Model模型层，存的一个数据对象。\n2、V就是View视图层，所有的html节点在这一层。\n3、VM就是ViewModel，它通过data属性连接Model模型层，通过el属性连接View视图层。\n\n```\naxios\n1、axios的特点有哪些？\n\n答：\n一、Axios 是一个基于 promise 的 HTTP 库，支持promise所有的API\n二、它可以拦截请求和响应\n三、它可以转换请求数据和响应数据，并对响应回来的内容自动转换成 JSON类型的数据\n四、安全性更高，客户端支持防御 XSRF\n2、axios有哪些常用方法？\n\n答：\n一、axios.get(url[, config])   //get请求用于列表和信息查询\n二、axios.delete(url[, config])  //删除\n三、axios.post(url[, data[, config]])  //post请求用于信息的添加\n四、axios.put(url[, data[, config]])  //更新操作\n3、说下你了解的axios相关配置属性？\n\n答：\n`url`是用于请求的服务器URL\n\n`method`是创建请求时使用的方法,默认是get\n\n`baseURL`将自动加在`url`前面，除非`url`是一个绝对URL。它可以通过设置一个`baseURL`便于为axios实例的方法传递相对URL\n\n`transformRequest`允许在向服务器发送前，修改请求数据，只能用在'PUT','POST'和'PATCH'这几个请求方法\n\n`headers`是即将被发送的自定义请求头\nheaders:{'X-Requested-With':'XMLHttpRequest'},\n\n`params`是即将与请求一起发送的URL参数，必须是一个无格式对象(plainobject)或URLSearchParams对象\nparams:{\nID:12345\n},\n\n`auth`表示应该使用HTTP基础验证，并提供凭据\n这将设置一个`Authorization`头，覆写掉现有的任意使用`headers`设置的自定义`Authorization`头\nauth:{\nusername:'janedoe',\npassword:'s00pers3cret'\n},\n\n'proxy'定义代理服务器的主机名称和端口\n`auth`表示HTTP基础验证应当用于连接代理，并提供凭据\n这将会设置一个`Proxy-Authorization`头，覆写掉已有的通过使用`header`设置的自定义`Proxy-Authorization`头。\nproxy:{\nhost:'127.0.0.1',\nport:9000,\nauth::{\nusername:'mikeymike',\npassword:'rapunz3l'\n}\n},\n````"},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.33"}