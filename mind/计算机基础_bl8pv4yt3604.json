{"root":{"data":{"id":"bl8pv4yt3604","created":1525503517008,"text":"计算机基础"},"children":[{"data":{"id":"bl8pyzupa3kg","created":1525503819332,"text":"后端高级语言","note":"## C\n1. unsigned \n+ 整型的每一种都有无符号（unsigned）和有符号（signed）两种类型，\n+ 在默认情况下声明的整型变量都是有符号的类型（char有点特别）\n2. 指针\n    1. 类型理解\n    ```C\n    int p; //这是一个普通的整型变量  \n    int *p; //首先从P 处开始,先与*结合,所以说明P 是一个指针,然后再与int 结合,说明指针所指向的内容的类型为int 型.所以P是一个返回整型数据的指针  \n    int p[3]; //首先从P 处开始,先与[]结合,说明P 是一个数组,然后与int 结合,说明数组里的元素是整型的,所以P 是一个由整型数据组成的数组  \n    int *p[3]; //首先从P 处开始,先与[]结合,因为其优先级比*高,所以P 是一个数组,然后再与*结合,说明数组里的元素是指针类型,然后再与int 结合,说明指针所指向的内容的类型是整型的,所以P 是一个由返回整型数据的指针所组成的数组  \n    int (*p)[3]; //首先从P 处开始,先与*结合,说明P 是一个指针然后再与[]结合(与\"()\"这步可以忽略,只是为了改变优先级),说明指针所指向的内容是一个数组,然后再与int 结合,说明数组里的元素是整型的.所以P 是一个指向由整型数据组成的数组的指针  \n    int **p; //首先从P 开始,先与*结合,说是P 是一个指针,然后再与*结合,说明指针所指向的元素是指针,然后再与int 结合,说明该指针所指向的元素是整型数据.由于二级指针以及更高级的指针极少用在复杂的类型中,所以后面更复杂的类型我们就不考虑多级指针了,最多只考虑一级指针.  \n    int p(int); //从P 处起,先与()结合,说明P 是一个函数,然后进入()里分析,说明该函数有一个整型变量的参数,然后再与外面的int 结合,说明函数的返回值是一个整型数据  \n    Int (*p)(int); //从P 处开始,先与指针结合,说明P 是一个指针,然后与()结合,说明指针指向的是一个函数,然后再与()里的int 结合,说明函数有一个int 型的参数,再与最外层的int 结合,说明函数的返回类型是整型,所以P 是一个指向有一个整型参数且返回类型为整型的函数的指针  \n    int *(*p(int))[3]; \n    //可以先跳过,不看这个类型,过于复杂从P 开始,先与()结合,说明P 是一个函数,然后进入()里面,与int 结合,说明函数有一个整型变量参数,然后再与外面的*结合,说明函数返回的是一个指针,,然后到最外面一层,先与[]结合,说明返回的指针指向的是一个数组,然后再与*结合,说明数组里的元素是指针,然后再与int 结合,说明指针指向的内容是整型数据.所以P 是一个参数为一个整数据且返回一个指向由整型指针变量组成的数组的指针变量的函数. \n    ```\n    2.如何使用指针\n    ````C\n    #include <stdio.h> \n    int main ()\n    {\n    int  var = 20;   /* 实际变量的声明 */\n    int  *ip;        /* 指针变量的声明 */\n    \n    ip = &var;  /* 在指针变量中存储 var 的地址 */\n    \n    printf(\"Address of var variable: %p\\n\", &var  );\n    \n    /* 在指针变量中存储的地址 */\n    printf(\"Address stored in ip variable: %p\\n\", ip );\n    \n    /* 使用指针访问值 */\n    printf(\"Value of *ip variable: %d\\n\", *ip );\n    \n    return 0;\n    }\n    ``` \n3. 预处理功能\n    1. 宏定义（ #define  标识符   字符串）\n    2. 文件包含 #include \"file\" 和 #include <file>\n    3. 条件编译 #ifndef \n    ```\n    #ifndef x //先测试x是否被宏定义过\n    #define x\n    程序段1 //如果x没有被宏定义过，定义x，并编译程序段 1\n    #else\n    程序段2 //如果x已经定义过了则编译程序段2的语句，“忽视”程序段 1。\n    #endif//终止if`\n    ```\n\n"},"children":[]},{"data":{"id":"bl8pyzuptygo","created":1525503819333,"text":"常识","note":"## String与StringBuffer\n 简要的说， String 类型和 StringBuffer 类型的主要性能区别其实在于 String 是不可变的对象, 因此在每次对 String 类型进行改变的时候其实都等同于生成了一个新的 String 对象，然后将指针指向新的 String 对象，所以经常改变内容的字符串最好不要用 String ，因为每次生成对象都会对系统性能产生影响，特别当内存中无引用对象多了以后， JVM 的 GC 就会开始工作，那速度是一定会相当慢的。\n\n ## CLR\n + 公共语言运行库(Common Language Runtime)\n + 和Java虚拟机一样也是一个运行时环境，它负责资源管理（内存分配和垃圾收集等），并保证应用和底层操作系统之间必要的分离。\n + CLR存在两种不同的翻译名称：公共语言运行库和公共语言运行时。\n ## 哈希表\n1. 概念\n    1. 散列表，一个数组\n    2. 以加快查找的速度，根据关键码值(Key value)而直接进行访问的数据结构\n    3. 把关键码值映射到表中一个位置来访问记录，这个映射函数叫做散列函数\n    4. 给定表M，存在函数f(key)，对任意给定的关键字值key，代入函数后若能得到包含该关键字的记录在表中的地址，则称表M为哈希(Hash）表，函数f(key)为哈希(Hash) 函数。\n2. 类比\n    1. 函数 k1≠k2，而f(k1)=f(k2)，这种现象称为碰撞（英语：Collision）。，要尽量减少碰撞\n    2. \n\n    \n"},"children":[]},{"data":{"id":"bl8pyzupww00","created":1525503819333,"text":"操作系统","note":"## 操作系统\n操作系统分为内核和用户空间\n## Linux启动\n内核启动后，会挂载 root 文件系统为其提供用户空间支持\n## 简介UFS\n是UNIX文件系统的简称，"},"children":[]},{"data":{"id":"bl8pyzuplmo0","created":1525503819333,"text":"数据通信的数学知识","note":"## CRC校验"},"children":[]},{"data":{"id":"bl8pyzupm08o","created":1525503819333,"text":"编码","note":"## 来龙去脉\n+ 最早的计算机在设计时采用8个比特（bit）作为一个字节（byte），所以，一个字节能表示的最大的整数就是255（二进制11111111=十进制255），如果要表示更大的整数，就必须用更多的字节。比如两个字节可以表示的最大整数是65535，4个字节可以表示的最大整数是4294967295。\n+ 由于计算机是美国人发明的，因此，最早只有127个字符被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码，比如大写字母A的编码是65，小写字母z的编码是122。\n+ ASCII编码和Unicode编码的区别：ASCII编码是1个字节，而Unicode编码通常是2个字节。\n+ 把Unicode编码转化为“可变长编码”的UTF-8编码。UTF-8编码把一个Unicode字符根据不同的数字大小编码成1-6个字节，常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间："},"children":[]},{"data":{"id":"bl8pyzupj9c0","created":1525503819333,"text":"计算机网络","note":"##  网关(Gateway)\n1. 又称网间连接器、协议转换器\n2. 网络层以上实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关既可以用于广域网互连，也可以用于局域网互连。\n3. 通俗：大家都知道，从一个房间走到另一个房间，必然要经过一扇门。同样，从一个网络向另一个网络发送信息，也必须经过一道“关口”，这道关口就是网关。\n4. TCP/IP协议里的网关是最常用的，在这里我们所讲的“网关”均指TCP/IP协议下的网关。\n5. 网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机。网络A向网络B转发数据包的过程。所以说，只有设置好网关的IP地址，TCP/IP协议才能实现不同网络之间的相互通信。那么这个IP地址是哪台机器的IP地址呢？网关的IP地址是具有路由功能的设备的IP地址，具有路由功能的设备有路由器、启用了路由协议的服务器（实质上相当于一台路由器）、代理服务器（也相当于一台路由器）。网关也被称为 IP路由器。\n6. 存疑：https://www.zhihu.com/question/20185640\n"},"children":[]},{"data":{"id":"bl8pyzuq60gs","created":1525503819334,"text":"进制计算","note":"## 判断\n```\n017 \n```\n最高位为7，八进制\n值：1*8+7*1 = 15\n\n## 常用数字\n+ Math.pow(2,10)--1024\n+ 2^10=1024\n+ 2^16=65536 "},"children":[]}]},"template":"default","theme":"fresh-blue","version":"1.4.33"}